#!/bin/sh -e
### BEGIN INIT INFO
# Provides:          hwmacvlan
# Required-Start:    $local_fs $remote_fs $network docker
# Required-Stop:     $local_fs $remote_fs $network docker
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: hw bridge init script
# Description:       This file allows running docker containers to talk to hardware
### END INIT INFO

NAME=hwmacvlan
DESC="hardware macvlan"
HWMACVLAN_ENABLE=false

export _SYSTEMCTL_SKIP_REDIRECT="true"
. /lib/lsb/init-functions

[ -f /etc/default/hwmacvlan ] && . /etc/default/hwmacvlan

DOCKER=/usr/local/bin/docker
LOGGER="/usr/bin/logger -t hwmacvlan"

if ! /bin/ip link show $IFACE > /dev/null; then
	$LOGGER "ip link show $IFACE failed; disabling"
	HWMACVLAN_ENABLE=false
else
	$LOGGER "ip link show $IFACE succeeded; will start"
fi

ROOTDEV=$(ip route show exact 0.0.0.0/0 | awk '{ print $5 }')
GATEWAY=$(ip route show exact 0.0.0.0/0 | awk '{ print $3 }')
SUBNET=$(ip -family inet -o addr show dev $ROOTDEV | awk '{print $4}')
IP=$(echo $SUBNET | sed 's/\/[0-9]*//')
MASK=$(echo $SUBNET | awk -F '/' '{ print $2 }')
RANGE=$(echo $IP | awk -F '.' '{ print $1 "." $2 "." $3 "." 241 "/28" }')
IPV6VARIABLE=$(echo $SUBNET | cut -d. -f 2)
IPV6SUBNET="fd0c:916b:0${IPV6VARIABLE}::/48"

if [ $MASK -gt 24 ]; then
    echo "Unsupported subnet mask $MASK"
    exit 1
fi

case "$1" in
    start)
        if $HWMACVLAN_ENABLE; then
	    $LOGGER "$IFACE enabled; going ahead"
            log_daemon_msg "Starting $DESC" "$NAME"
            while ! ip link show dev docker0 > /dev/null 2>&1 ; do sleep 1; done
            while ! $DOCKER network list > /dev/null 2>&1; do sleep 1; done
            ip link set $IFACE up
            $DOCKER network remove hwmacvlan > /dev/null 2>&1 || true
            (echo "docker network create macvlan:"; $DOCKER network create -d macvlan --subnet=$SUBNET --gateway=$IP --ip-range=$RANGE --ipv6 --subnet=$IPV6SUBNET -o parent=$IFACE hwmacvlan 2>&1) | $LOGGER
            log_end_msg 0
	    $LOGGER "done"
        else
            $LOGGER "Not starting $DESC $NAME, disabled"
            log_warning_msg "Not starting $DESC $NAME, disabled"
        fi
        ;;
    stop)
        if $HWMACVLAN_ENABLE; then
            log_daemon_msg "Stopping $DESC" "$NAME"
            $DOCKER network remove hwmacvlan > /dev/null
            log_end_msg 0
        fi
        ;;
    restart|force-reload|reload)
        $0 stop
        $0 start
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|force-reload}"
        exit 1
        ;;
esac

exit 0
