#!/bin/sh -e
### BEGIN INIT INFO
# Provides:          hwbridge
# Required-Start:    $local_fs $remote_fs $network docker
# Required-Stop:     $local_fs $remote_fs $network docker
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: hw bridge init script
# Description:       This file allows running docker containers to talk to hardware
### END INIT INFO

NAME=hwbridge
DESC="hardware bridge"
HWBRIDGE_ENABLE=false

export _SYSTEMCTL_SKIP_REDIRECT="true"
. /lib/lsb/init-functions

[ -f /etc/default/hwbridge ] && . /etc/default/hwbridge

/bin/ip link show $IFACE > /dev/null || HWBRIDGE_ENABLE=false
IP=$(ip -family inet -o addr show dev $IFACE | awk '{print $4}' | sed 's/\/[0-9]*//')
MAC=$(cat /sys/class/net/${IFACE}/address)

case "$1" in
    start)
        if $HWBRIDGE_ENABLE; then
            log_daemon_msg "Starting $DESC" "$NAME"
            while ! ip link show dev docker0 > /dev/null 2>&1 ; do sleep 1; done
            if [ "$IP" ]; then
                ebtables -t broute -A BROUTING -i $IFACE -d $MAC -j DROP
                ebtables -t broute -A BROUTING -p arp -i $IFACE --arp-ip-dst $IP -j DROP
            fi
            ip link set $IFACE up master docker0
            log_end_msg 0
        else
            log_warning_msg "Not starting $DESC $NAME, disabled"
        fi
        ;;
    stop)
        if $HWBRIDGE_ENABLE; then
            log_daemon_msg "Stopping $DESC" "$NAME"
            ip link set $IFACE nomaster
            if [ "$IP" ]; then
                ebtables -t broute -D BROUTING -i $IFACE -d $MAC -j DROP
                ebtables -t broute -D BROUTING -p arp -i $IFACE --arp-ip-dst $IP -j DROP
            fi
            log_end_msg 0
        fi
        ;;
    restart|force-reload|reload)
        $0 stop
        $0 start
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|force-reload}"
        exit 1
        ;;
esac

exit 0
